sensor:
  - platform: bme680
    i2c_id: i2c_bus_a
    address: 0x77
    iir_filter : 7x
    update_interval: 5s

    temperature:
      name: "Ambient Temperature"
      id: ambient_temperature
      oversampling: 16x
      device_class: temperature
    
    pressure:
      name: "Atmospheric Pressure"
      id: ambient_pressure
      device_class: atmospheric_pressure

    humidity:
      name: "Humidity"
      id: relative_humidity

    gas_resistance:
      id: gas_resistance
      name: "Gas Resistance"

  - platform: template
    name: "Air Quality Index"
    id: air_quality_index
    icon: "mdi:gauge"
    # caulculation: comp_gas = log(R_gas[ohm]) + 0.04 log(Ohm)/%rh * hum[%rh]
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 *  id(relative_humidity).state;

  - platform: template
    name: "Altitude"
    lambda: |-
      const float STANDARD_SEA_LEVEL_PRESSURE = 1013.25; //in hPa, see note
      return ((id(ambient_temperature).state + 273.15) / 0.0065) *
        (powf((STANDARD_SEA_LEVEL_PRESSURE / id(ambient_pressure).state), 0.190234) - 1); // in meters
    update_interval: 60s
    icon: 'mdi:signal'
    unit_of_measurement: 'm'
